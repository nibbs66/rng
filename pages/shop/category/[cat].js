import {useState} from 'react';
import styles from "../../../styles/website/Cat.module.css"
import Link from "next/link"
import {useRouter} from "next/router";
import Head from "next/head";
import axios from "axios";
import ServiceCard from "../../../components/website/ServiceCard";
import ArrowBack from "../../../components/icons/ArrowBack";
import MainLayout from "../../../components/layouts/MainLayout";
import useSWR from "swr";
import {fetcher} from "../../../components/helper/fetcher";

const Product = ({categoryList, subCat}) => {


    const router = useRouter()
    const {cat} = router.query
    const [quantity, setQuantity] = useState(1)
    const [catListing, setCatListing] = useState(cat)
    const [mapSelection, setMapSelection] = useState(true)
    const { data: products, error, mutate} = useSWR(`/api/products`, fetcher)



    const handleClick = (sub) => {
        setCatListing(sub)
        if(sub === 'New'){
            setMapSelection(false)
        }

    }

    return (
        <div className={styles.container}>
            <Head>
                <title >{cat}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/public/favicon.ico" />
            </Head>

            <div className={styles.wrapper}>
              <div className={styles.back}>
                  <div className={styles.backArrow}>
                      <Link href="/shop" passHref>
                        <div className={styles.backArrow}>
                          <ArrowBack height={45} width={45}/>
                          <h1 className={styles.terug}> Terug</h1>
                        </div>
                      </Link>
                  </div>

                  <h1>{cat}</h1>
              </div>
                <div className={styles.buttonContainer}>
                {subCat[0].subCategories.length > 0 && subCat[0].subCategories.map((sub, idx)=>(

                    <button className={styles.sub} key={idx} onClick={()=>handleClick(sub)}>{sub}</button>
                ))}
                    {categoryList[0]?.new &&  <button className={styles.sub} onClick={()=>handleClick('New')}>New</button>}
                </div>

                <div className={styles.cardContainer}>
                    {mapSelection && categoryList.map((item) => (

                            <div key={item._id}>
                                {item.categories.includes(catListing) &&
                                    <ServiceCard key={item._id} product={item} cat={cat}/>
                                }

                            </div>
                        ))
                    }
                    {!mapSelection && categoryList.map((item) => (

                        <div key={item._id}>
                            {item.new &&
                                <ServiceCard key={item._id} product={item} cat={cat}/>
                            }

                        </div>
                    ))
                    }

                </div>

            </div>

        </div>

    );
};


    export default Product;


export const getServerSideProps = async (ctx) =>{

    const host = ctx.req.headers.host;
    const res = await axios.get(`https://`+host+`/api/products?category=${ctx.params.cat}`);
    const cat = await axios.get(`https://`+host+`/api/catMenu?category=${ctx.params.cat}`);


    return{
        props:{
            categoryList: res.data,
            subCat: cat.data,

        }
    }
};
Product.getLayout = function getLayout(page){
    return(
        <MainLayout>
            {page}
        </MainLayout>
    )
}
